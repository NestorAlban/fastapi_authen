version: "3"
services:
#  Create a service named db.
  sellsdb:
#   Use the Docker Image postgres. This will pull the newest release.
    image: "postgres:13"
    
#   Give the container the name my_postgres. You can changes to something else.
    container_name: "sellsdb"
#   Setup the username, password, and database name. You can changes these values.
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sellsdb
#   Maps port 54320 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    networks:
      - fastapi_network
    ports:
      - "5432:5432" 
#   Exponer el puerto 5432 de la app al puerto 5438 de nuestro computador
#   Set a volume some that database is not lost after shutting down the container.
#   I used the name postgres-data but you can changed it to something else.
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  web:
    build: .
    depends_on:
      - sellsdb
    links:
      - sellsdb:sellsdb
    networks:
      - fastapi_network
    ports:
      - "5000:5000"
  # app:
  #   container_name: fastapiapp
    
  #   build: .
  #   ports:
  #     - "5008:5000"
networks:
  fastapi_network:
    driver: bridge
  # web:
  #   build: 
  #     context: ./fastapi-app
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - sellsdb
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - ./fastapi-app/app:/app
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:password@sellsdb:5438/app
  #     - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]

  